{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AzureAd": {
    "Instance": "https://login.microsoftonline.com/",
    "TenantId": "",
    "ClientId": "",
    "ClientSecret": "your-client-secret",
    "redirectUri": "https://localhost:5173/"
  },
  "Cosmos": {
    "AuthMethod": "ManagedIdentity", //Key or ManagedIdentity
    "ConnectionString": "AccountEndpoint=https://localhost:8081/;AccountKey=C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==",    
    "Database": "Conversations",
    "MessageContainer": "message",
    "MessagePartitionKey": "sessionId",
    "DashboardContainer": "dashboard",
    "DashboardPartitionKey": "sessionId",
    "AgentContainer": "agent",
    "AgentPartitionKey": "type",
    "ScenarioContainer": "scenario",
    "ScenarioPartitionKey": "id",
    "SessionContainer": "session",
    "SessionPartitionKey": "userId",
    "UserContainer": "user",
    "UserPartitionKey": "id",
    "EndPoint": ""
  },
  "AIService": {
    "Endpoint": "",
    "Key": "",
    "Models": {
      "ChatDeploymentName": ""
    },
    "Types": "AzureOpenAI"
  },
  "Service": {
    "SemanticPluginsDirectory": "Plugins"
  },
  "Speech": {
    "SubscriptionKey": "",
    "Region": "",
    "DefaultLanguage": "fr-FR",
    "VoiceName": "en-US-AvaMultilingualNeural"
  },
  "SignalR": {
    "Endpoint": "https://localhost:5173/"
  },
  "AllowedOrigins": [
    "https://localhost:5173/"
  ],
  "KernelMemory": {
    "Services": {
      "AzureAISearch": {
        // "ApiKey" or "AzureIdentity". For other options see <AzureAISearchConfig>.
        // AzureIdentity: use automatic AAD authentication mechanism. You can test locally
        //   using the env vars AZURE_TENANT_ID, AZURE_CLIENT_ID, AZURE_CLIENT_SECRET.
        "Auth": "ApiKey",
        "Endpoint": "",
        "APIKey": "",
        // Hybrid search is not enabled by default. Note that when using hybrid search
        // relevance scores are different, usually lower, than when using just vector search
        "UseHybridSearch": true,
        // Helps improve relevance score consistency for search services with multiple replicas by
        // attempting to route a given request to the same replica for that session. Use this when
        // favoring consistent scoring over lower latency. Can adversely affect performance.
        //
        // Whether to use sticky sessions, which can help getting more consistent results.
        // When using sticky sessions, a best-effort attempt will be made to target the same replica set.
        // Be wary that reusing the same replica repeatedly can interfere with the load balancing of
        // the requests across replicas and adversely affect the performance of the search service.
        //
        // See https://learn.microsoft.com/rest/api/searchservice/documents/search-post?view=rest-searchservice-2024-07-01&tabs=HTTP#request-body
        "UseStickySessions": true
      },
      "AzureOpenAIEmbedding": {
        // "ApiKey" or "AzureIdentity"
        // AzureIdentity: use automatic AAD authentication mechanism. You can test locally
        //   using the env vars AZURE_TENANT_ID, AZURE_CLIENT_ID, AZURE_CLIENT_SECRET.
        "Auth": "ApiKey",
        "Endpoint": "",
        "APIKey": "",
        "Deployment": "",
        // The max number of tokens supported by model deployed
        // See https://learn.microsoft.com/azure/ai-services/openai/concepts/models
        "MaxTokenTotal": 8191,
        // The number of dimensions output embeddings should have.
        // Only supported in "text-embedding-3" and later models developed with
        // MRL, see https://arxiv.org/abs/2205.13147
        "EmbeddingDimensions": 3072,
        // How many embeddings to calculate in parallel. The max value depends on
        // the model and deployment in use.
        // See also hhttps://learn.microsoft.com/azure/ai-services/openai/reference#embeddings
        "MaxEmbeddingBatchSize": 10,
        // How many times to retry in case of throttling.
        "MaxRetries": 10
      },
      "AzureOpenAIText": {
        // "ApiKey" or "AzureIdentity"
        // AzureIdentity: use automatic AAD authentication mechanism. You can test locally
        //   using the env vars AZURE_TENANT_ID, AZURE_CLIENT_ID, AZURE_CLIENT_SECRET.
        "Auth": "ApiKey",
        "Endpoint": "",
        "APIKey": "",
        "Deployment": "",
        // The max number of tokens supported by model deployed
        // See https://learn.microsoft.com/azure/ai-services/openai/concepts/models
        "MaxTokenTotal": 128000,
        // "ChatCompletion" or "TextCompletion"
        "APIType": "ChatCompletion",
        // How many times to retry in case of throttling.
        "MaxRetries": 10
      }
    }
  },
  "DocumentIntelligent": {
    "Endpoint": "",
    "Key": "",
    "IndexName": "virtualteacherTest"
  }

}
